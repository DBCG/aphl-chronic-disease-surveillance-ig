{
  "resourceType": "Library",
  "id": "ControllingBloodPressureFHIR",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://hl7.org/fhir/us/chronic-ds/Library/ControllingBloodPressureFHIR",
  "version": "9.0.000",
  "name": "ControllingBloodPressureFHIR",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://hl7.org/fhir/codesystem-library-type.html",
      "code": "logic-library"
    } ]
  },
<<<<<<< HEAD:archive-2021/input/resources/library/ControllingBloodPressureFHIR.json
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
<<<<<<< HEAD
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/FHIRHelpers|4.1.000"
=======
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/FHIRHelpers|4.0.001"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/MATGlobalCommonFunctionsFHIR4|6.0.000"
  }, {
    "type": "depends-on",
    "display": "Library AdultOutpatientEncounters",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/AdultOutpatientEncountersFHIR4|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library SDE",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/SupplementalDataElementsFHIR4|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library FrailtyLTI",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/AdvancedIllnessandFrailtyExclusionECQMFHIR4|5.12.000"
  }, {
    "type": "depends-on",
    "display": "Library Hospice",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/HospiceFHIR4|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library SurveillanceDataElements",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/SurveillanceDataElementsFHIR4|1.0.000"
  }, {
    "type": "depends-on",
<<<<<<< HEAD
    "display": "Library PalliativeCare",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/PalliativeCareFHIR"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/FHIRCommon|1.1.000"
  }, {
    "type": "depends-on",
    "display": "Library AC",
    "resource": "http://hl7.org/fhir/us/chronic-ds/Library/AlphoraCommon"
  }, {
    "type": "depends-on",
=======
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system ISO-8601-Derived Periods",
    "resource": "http://ohie.org/CodeSystem/iso-8601-derived-periods"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
<<<<<<< HEAD
    "display": "Code system SNOMEDCT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionClinicalStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-clinical"
=======
    "display": "Code system SNOMEDCT:2017-09",
    "resource": "http://snomed.info/sct|http://snomed.info/sct/version/201709"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  }, {
    "type": "depends-on",
    "display": "Value set Chronic Kidney Disease, Stage 5",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1002"
  }, {
    "type": "depends-on",
    "display": "Value set Dialysis Services",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1013"
  }, {
    "type": "depends-on",
    "display": "Value set ED",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1085"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Inpatient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
  }, {
    "type": "depends-on",
    "display": "Value set End Stage Renal Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
  }, {
    "type": "depends-on",
    "display": "Value set ESRD Monthly Outpatient Services",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1014"
  }, {
    "type": "depends-on",
    "display": "Value set Essential Hypertension",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.104.12.1011"
  }, {
    "type": "depends-on",
    "display": "Value set Ethnicity",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.837"
  }, {
    "type": "depends-on",
    "display": "Value set Kidney Transplant",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1012"
  }, {
    "type": "depends-on",
    "display": "Value set Kidney Transplant Recipient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1029"
  }, {
    "type": "depends-on",
    "display": "Value set ONC Administrative Sex",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1"
  }, {
    "type": "depends-on",
    "display": "Value set Payer",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
  }, {
    "type": "depends-on",
    "display": "Value set Race",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.836"
  }, {
    "type": "depends-on",
    "display": "Value set Vascular Access for Dialysis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1011"
  }, {
    "type": "depends-on",
<<<<<<< HEAD
    "display": "Value set Emergency Department Evaluation and Management Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1010"
  }, {
    "type": "depends-on",
=======
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "display": "Value set Office Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
  }, {
    "type": "depends-on",
    "display": "Value set Annual Wellness Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1240"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services - Established Office Visit, 18 and Up",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1025"
  }, {
    "type": "depends-on",
<<<<<<< HEAD
    "display": "Value set Preventive Care Services - Initial Office Visit, 18 and Up",
=======
    "display": "Value set Preventive Care Services-Initial Office Visit, 18 and Up",
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1023"
  }, {
    "type": "depends-on",
    "display": "Value set Home Healthcare Services",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016"
  }, {
    "type": "depends-on",
<<<<<<< HEAD
    "display": "Value set Online Assessments",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1089"
  }, {
    "type": "depends-on",
    "display": "Value set Telephone Visits",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1003"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Care Ambulatory",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Diagnosis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1165"
=======
    "display": "Value set Hospice care ambulatory",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15"
  }, {
    "type": "depends-on",
    "display": "Value set Care Services in Long-Term Residential Facility",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1014"
  }, {
    "type": "depends-on",
    "display": "Value set Nursing Facility Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1012"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  }, {
    "type": "depends-on",
    "display": "Value set Frailty Device",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300"
  }, {
    "type": "depends-on",
    "display": "Value set Frailty Diagnosis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074"
  }, {
    "type": "depends-on",
    "display": "Value set Frailty Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088"
  }, {
    "type": "depends-on",
    "display": "Value set Frailty Symptom",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1075"
  }, {
    "type": "depends-on",
    "display": "Value set Outpatient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087"
  }, {
    "type": "depends-on",
    "display": "Value set Observation",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086"
  }, {
    "type": "depends-on",
    "display": "Value set Nonacute Inpatient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084"
  }, {
    "type": "depends-on",
    "display": "Value set Advanced Illness",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082"
  }, {
    "type": "depends-on",
    "display": "Value set Acute Inpatient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1083"
  }, {
    "type": "depends-on",
    "display": "Value set Dementia Medications",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.196.12.1510"
<<<<<<< HEAD
  }, {
    "type": "depends-on",
    "display": "Value set Palliative Care Diagnosis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1167"
  }, {
    "type": "depends-on",
    "display": "Value set Palliative Care Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1090"
  }, {
    "type": "depends-on",
    "display": "Value set Palliative Care Intervention",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.198.12.1135"
=======
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "SDE Ethnicity",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Coding"
  }, {
    "name": "SDE Payer",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "SDE Race",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Coding"
  }, {
    "name": "SDE Sex",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "SDE Age",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "SDE Age Group",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "SDE State of Residence",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "SDE Postal Code of Residence",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "SDE Food Insecurity Risk Status",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "CodeableConcept"
  }, {
    "name": "Qualifying Diastolic Blood Pressure Reading",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Qualifying Systolic Blood Pressure Reading",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Blood Pressure Days",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "dateTime"
  }, {
    "name": "Most Recent Blood Pressure Day",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "Lowest Diastolic Reading on Most Recent Blood Pressure Day",
    "use": "out",
    "min": 0,
    "max": "1",
<<<<<<< HEAD
    "type": "Any"
=======
    "type": "Quantity"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  }, {
    "name": "Has Diastolic Blood Pressure Less Than 90",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Lowest Systolic Reading on Most Recent Blood Pressure Day",
    "use": "out",
    "min": 0,
    "max": "1",
<<<<<<< HEAD
    "type": "Any"
=======
    "type": "Quantity"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
  }, {
    "name": "Has Systolic Blood Pressure Less Than 140",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Numerator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Essential Hypertension Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
<<<<<<< HEAD
    "name": "Pregnancy Or Renal Diagnosis",
=======
    "name": "Pregnancy Or Renal Diagnosis Exclusions",
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Denominator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "End Stage Renal Disease Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "End Stage Renal Disease Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Denominator Exclusion",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
<<<<<<< HEAD
    "mustSupport": [ "url", "extension", "value", "use", "type" ]
  }, {
    "type": "Coverage",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Coverage" ],
    "mustSupport": [ "type", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "effective", "status", "component" ],
=======
    "mustSupport": [ "extension", "value", "url" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "effective", "component", "code", "status" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "85354-9",
        "display": "blood pressure"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
<<<<<<< HEAD
    "mustSupport": [ "code", "value", "effective" ],
=======
    "mustSupport": [ "effective", "component", "code", "status" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
<<<<<<< HEAD
        "code": "45755-6",
        "display": "Hospice care [Minimum Data Set]"
=======
        "code": "85354-9",
        "display": "blood pressure"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
<<<<<<< HEAD
    "mustSupport": [ "code", "value", "effective" ],
=======
    "mustSupport": [ "effective", "component", "code", "status" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
<<<<<<< HEAD
        "code": "98181-1",
        "display": "Medical equipment used"
=======
        "code": "85354-9",
        "display": "blood pressure"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
<<<<<<< HEAD
    "mustSupport": [ "code", "effective" ],
=======
    "mustSupport": [ "effective", "component", "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "85354-9",
        "display": "blood pressure"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "effective", "component", "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "85354-9",
        "display": "blood pressure"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "effective", "component", "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "85354-9",
        "display": "blood pressure"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "effective", "code" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1075"
    } ]
  }, {
<<<<<<< HEAD
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "effective", "value" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "71802-3",
        "display": "Housing status"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "71007-9",
        "display": "Functional Assessment of Chronic Illness Therapy - Palliative Care Questionnaire (FACIT-Pal)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "88124-3",
        "display": "Food insecurity risk [HVS]"
      } ]
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1240"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1025"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1023"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1089"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1014"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "hospitalization", "hospitalization.dischargeDisposition", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1003"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1010"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "diagnosis", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1083"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1090"
    } ]
  }, {
=======
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.104.12.1011"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1029"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1002"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
<<<<<<< HEAD
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1165"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1167"
=======
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1240"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1025"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1023"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1014"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "hospitalization", "hospitalization.dischargeDisposition", "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1014"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1012"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1085"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1011"
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1012"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.109.12.1013"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
<<<<<<< HEAD
    "mustSupport": [ "code", "performed" ],
=======
    "mustSupport": [ "code", "performed", "status" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15"
    } ]
  }, {
<<<<<<< HEAD
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "performed" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.198.12.1135"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code", "authoredOn" ],
=======
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code", "authoredOn", "intent" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15"
    } ]
  }, {
    "type": "DeviceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/DeviceRequest" ],
<<<<<<< HEAD
    "mustSupport": [ "code" ],
=======
    "mustSupport": [ "code", "authoredOn" ],
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300"
    } ]
<<<<<<< HEAD
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.196.12.1510"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
=======
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
>>>>>>> parent of 143d2ee (feat: Add keyword, 'high' for high blood pressure throughout directory)
=======
  "content": [ {
    "contentType": "text/cql",
    "data": ""
>>>>>>> parent of 2dbebf6 (fix: Address various bugs):input/resources/library/ControllingHighBloodPressureFHIR.json
  } ]
}