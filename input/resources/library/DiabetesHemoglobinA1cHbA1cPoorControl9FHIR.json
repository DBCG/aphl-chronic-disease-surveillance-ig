{
  "resourceType": "Library",
  "id": "DiabetesHemoglobinA1cHbA1cPoorControl9FHIR",
  "meta": {
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://hl7.org/fhir/us/chronic-ds/Library/DiabetesHemoglobinA1cHbA1cPoorControl9FHIR",
  "version": "0.0.001",
  "name": "DiabetesHemoglobinA1cHbA1cPoorControl9FHIR",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2021-04-23T15:57:06+00:00",
  "publisher": "National Committee for Quality Assurance",
  "description": "Diabetes: Hemoglobin A1c (HbA1c) Poor Control (> 9%)FHIR",
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}